"""initialize migrations

Revision ID: b49d0e6313a3
Revises:
Create Date: 2020-03-20 19:34:17.234704

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b49d0e6313a3"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "res_thc_questions",
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("deck", sa.String(), nullable=True),
        sa.Column("topic", sa.String(), nullable=False),
        sa.Column("answer_green", sa.String(), nullable=True),
        sa.Column("answer_red", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("question_id"),
        sa.UniqueConstraint("topic", name="res_thc_questions_topic_key"),
    )
    op.create_table(
        "teams",
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["parent_id"], ["teams.team_id"],),
        sa.PrimaryKeyConstraint("team_id"),
        sa.UniqueConstraint("code", name="teams_code_key"),
    )
    op.create_table(
        "activities",
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.Column("activity_name", sa.String(), nullable=True),
        sa.Column("jira_project_key", sa.String(), nullable=True),
        sa.Column("jira_project_name", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["team_id"], ["teams.team_id"],),
        sa.PrimaryKeyConstraint("activity_id"),
        sa.UniqueConstraint("activity_name", name="activities_activity_name_key"),
    )
    op.create_table(
        "m_overtime",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("measurement_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("measurement_date", sa.Date(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.Column("workdays_fix", sa.Integer(), nullable=True),
        sa.Column("workdays_actual", sa.Integer(), nullable=False),
        sa.Column("overtime", sa.Interval(), nullable=True),
        sa.ForeignKeyConstraint(["team_id"], ["teams.team_id"],),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("measurement_id", name="m_overtime_measurement_id_key"),
    )
    op.create_table(
        "m_thc",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("measurement_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("measurement_date", sa.DateTime(), nullable=False),
        sa.Column("session_name", sa.String(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.Column("question_id", sa.Integer(), nullable=True),
        sa.Column("result_red", sa.Integer(), nullable=True),
        sa.Column("result_yellow", sa.Integer(), nullable=True),
        sa.Column("result_green", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["question_id"], ["res_thc_questions.question_id"],),
        sa.ForeignKeyConstraint(["team_id"], ["teams.team_id"],),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("measurement_id", name="m_thc_measurement_id_key"),
        sa.UniqueConstraint(
            "session_name",
            "team_id",
            "question_id",
            name="m_thc_session_name_team_id_question_id_key",
        ),
    )
    op.create_table(
        "sprints",
        sa.Column("sprint_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.Column("start_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.Column("sp_plan", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["team_id"], ["teams.team_id"],),
        sa.PrimaryKeyConstraint("sprint_id"),
    )
    op.create_table(
        "m_burndown",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("measurement_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("measurement_date", sa.DateTime(), nullable=False),
        sa.Column("activity_id", sa.Integer(), nullable=True),
        sa.Column("sprint_id", sa.Integer(), nullable=True),
        sa.Column("sp_not_done", sa.Integer(), nullable=True),
        sa.Column("sp_added", sa.Integer(), nullable=True),
        sa.Column("sp_swapped", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["activity_id"], ["activities.activity_id"],),
        sa.ForeignKeyConstraint(["sprint_id"], ["sprints.sprint_id"],),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint(
            "measurement_date",
            "sprint_id",
            name="m_burndown_measurement_date_sprint_id_key",
        ),
        sa.UniqueConstraint("measurement_id", name="m_burndown_measurement_id_key"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("m_burndown")
    op.drop_table("sprints")
    op.drop_table("m_thc")
    op.drop_table("m_overtime")
    op.drop_table("activities")
    op.drop_table("teams")
    op.drop_table("res_thc_questions")
    # ### end Alembic commands ###
