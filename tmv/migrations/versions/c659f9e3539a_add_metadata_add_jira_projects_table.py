"""Add metadata. Add jira_projects table

Revision ID: c659f9e3539a
Revises: 136696b567fe
Create Date: 2020-04-08 19:46:18.161233

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "c659f9e3539a"
down_revision = "136696b567fe"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "jira_projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("project_key", sa.String(), nullable=False),
        sa.Column("project_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_jira_projects")),
        sa.UniqueConstraint("project_key", name=op.f("uq_jira_projects_project_key")),
    )
    op.add_column(
        "activities", sa.Column("jira_project_id", sa.Integer(), nullable=True)
    )
    op.drop_constraint("activities_activity_name_key", "activities", type_="unique")
    op.create_unique_constraint(
        op.f("uq_activities_activity_name"), "activities", ["activity_name"]
    )
    op.create_foreign_key(
        op.f("fk_activities_jira_project_id_jira_projects"),
        "activities",
        "jira_projects",
        ["jira_project_id"],
        ["id"],
    )
    op.drop_column("activities", "jira_project_key")
    op.drop_column("activities", "jira_project_name")
    op.drop_constraint(
        "m_burndown_measurement_date_sprint_id_key", "m_burndown", type_="unique"
    )
    op.create_unique_constraint(
        op.f("uq_m_burndown_measurement_date"),
        "m_burndown",
        ["measurement_date", "sprint_id"],
    )
    op.drop_constraint("m_burndown_measurement_id_key", "m_burndown", type_="unique")
    op.create_unique_constraint(
        op.f("uq_m_burndown_measurement_id"), "m_burndown", ["measurement_id"]
    )
    op.drop_constraint("m_overtime_measurement_id_key", "m_overtime", type_="unique")
    op.create_unique_constraint(
        op.f("uq_m_overtime_measurement_id"), "m_overtime", ["measurement_id"]
    )
    op.drop_constraint("m_thc_measurement_id_key", "m_thc", type_="unique")
    op.create_unique_constraint(
        op.f("uq_m_thc_measurement_id"), "m_thc", ["measurement_id"]
    )
    op.drop_constraint(
        "m_thc_session_name_team_id_question_id_key", "m_thc", type_="unique"
    )
    op.create_unique_constraint(
        op.f("uq_m_thc_session_name"),
        "m_thc",
        ["session_name", "team_id", "question_id"],
    )
    op.drop_constraint(
        "res_thc_questions_topic_key", "res_thc_questions", type_="unique"
    )
    op.create_unique_constraint(
        op.f("uq_res_thc_questions_topic"), "res_thc_questions", ["topic"]
    )
    op.drop_constraint("role_name_key", "role", type_="unique")
    op.create_unique_constraint(op.f("uq_role_name"), "role", ["name"])
    op.drop_constraint("teams_code_key", "teams", type_="unique")
    op.create_unique_constraint(op.f("uq_teams_code"), "teams", ["code"])
    op.drop_constraint("user_email_key", "user", type_="unique")
    op.create_unique_constraint(op.f("uq_user_email"), "user", ["email"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("user_email_key", "user", ["email"])
    op.drop_constraint(op.f("uq_user_email"), "user", type_="unique")
    op.create_unique_constraint("teams_code_key", "teams", ["code"])
    op.drop_constraint(op.f("uq_teams_code"), "teams", type_="unique")
    op.create_unique_constraint("role_name_key", "role", ["name"])
    op.drop_constraint(op.f("uq_role_name"), "role", type_="unique")
    op.create_unique_constraint(
        "res_thc_questions_topic_key", "res_thc_questions", ["topic"]
    )
    op.drop_constraint(
        op.f("uq_res_thc_questions_topic"), "res_thc_questions", type_="unique"
    )
    op.create_unique_constraint(
        "m_thc_session_name_team_id_question_id_key",
        "m_thc",
        ["session_name", "team_id", "question_id"],
    )
    op.create_unique_constraint("m_thc_measurement_id_key", "m_thc", ["measurement_id"])
    op.drop_constraint(op.f("uq_m_thc_session_name"), "m_thc", type_="unique")
    op.drop_constraint(op.f("uq_m_thc_measurement_id"), "m_thc", type_="unique")
    op.create_unique_constraint(
        "m_overtime_measurement_id_key", "m_overtime", ["measurement_id"]
    )
    op.drop_constraint(
        op.f("uq_m_overtime_measurement_id"), "m_overtime", type_="unique"
    )
    op.create_unique_constraint(
        "m_burndown_measurement_id_key", "m_burndown", ["measurement_id"]
    )
    op.create_unique_constraint(
        "m_burndown_measurement_date_sprint_id_key",
        "m_burndown",
        ["measurement_date", "sprint_id"],
    )
    op.drop_constraint(
        op.f("uq_m_burndown_measurement_id"), "m_burndown", type_="unique"
    )
    op.drop_constraint(
        op.f("uq_m_burndown_measurement_date"), "m_burndown", type_="unique"
    )
    op.add_column(
        "activities",
        sa.Column(
            "jira_project_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "activities",
        sa.Column("jira_project_key", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(
        op.f("fk_activities_jira_project_id_jira_projects"),
        "activities",
        type_="foreignkey",
    )
    op.create_unique_constraint(
        "activities_activity_name_key", "activities", ["activity_name"]
    )
    op.drop_constraint(
        op.f("uq_activities_activity_name"), "activities", type_="unique"
    )
    op.drop_column("activities", "jira_project_id")
    op.drop_table("jira_projects")
    # ### end Alembic commands ###
