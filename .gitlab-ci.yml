image: python:3.8-slim


stages:
  - compile
  - test


compile_tmv_dash_components:
  stage: compile

  image: ubuntu:latest

  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    DEBIAN_FRONTEND: noninteractive

  cache:
    key: "compile_tmv_dash_components-$CI_COMMIT_REF_SLUG"
    paths:
      - .cache/pip
      - tmv_dash_components/node_modules

  before_script:
    - apt-get update && apt-get install nodejs npm python3 python3-pip -y
    - node --version
    - python3 --version
    - cd tmv_dash_components

  script:
    - python3 -m pip install "dash[dev]>=1.3.1"
    - npm i
    - npm run build:js
    - npm run build:py
  artifacts:
    paths:
      - ./tmv_dash_components/tmv_dash_components/
    expire_in: 20 minutes


test:
  stage: test

  variables:
    POSTGRES_DB: tmv_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test
    POSTGRES_HOST_AUTH_METHOD: trust
  
    TESTING_SQLALCHEMY_DATABASE_URI: postgresql://postgres:test@postgres:5432/tmv_test
  
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PIPENV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pipenv"
    PIPENV_VENV_IN_PROJECT: 1

  services:
    - postgres:11-alpine

  cache:
    key: "test-$CI_COMMIT_REF_SLUG"
    paths:
      - .cache/pip
      - .cache/pipenv
      - .venv/

  before_script:
    - python -V
    - pip install -U pipenv
    - pipenv sync --dev --sequential

  script:
    - pipenv check
    - pipenv run pylint tmv/
    - pipenv run black --check tmv/
    - pipenv run pytest --cov-config=tmv/.coveragerc --cov=tmv tmv/test/
